import time
import random
import re
import unidecode
from twilio.rest import Client
from test_listing import title, category, description, price, location, min_price, seller_contact, image_url, available_slots, condition, year_model, brand, material, dimensions

# ‚ö°Ô∏è Gestion des √©changes et confirmations
confirmed_deals = {}
scheduled_appointments = {}
user_conversations = {}

# Twilio Client pour envoyer les messages
TWILIO_ACCOUNT_SID = "YOUR_TWILIO_SID"
TWILIO_AUTH_TOKEN = "YOUR_TWILIO_AUTH_TOKEN"
twilio_client = Client(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)

# üîÑ Liste des mots-cl√©s issus du fichier wording complet
model_keywords = ["model", "which model", "what model", "which version", "product model", "which type", 
    "specs", "configuration", "technical details", "which specs", "what type", "what version",
    "which model is this", "can you tell me the model", "is this the latest model", 
    "is this an old model", "which version", "is it an updated model", 
    "does it have the latest features", "any special specs", "what are the features", 
    "does it have any upgrades", "which generation", "which series", "which brand", 
    "does it have high specs", "basic or pro model", "is it the standard version", 
    "is it the premium model", "does it come with advanced features", "is this the basic model",
    "which edition", "which build", "hardware specs", "what‚Äôs the exact model", 
    "is it a rare model", "is it a limited edition", "does it have a unique design",
    "does it come in different versions", "does it have extra features", 
    "does it support the latest software", "is it compatible with newer models",
    "does it match the latest trends", "does it have customizable features",
    "how powerful is it", "is it the high-end model", "does it come with extra accessories",
    "which one from the series", "is it the base model", "is it a special version",
    "is this an entry-level model", "what‚Äôs the model number", "does it have specific enhancements",
    "is it the flagship model", "does it have a performance boost",
    "is this a newer design", "does it have different color options", 
    "is it an international version", "is it an exclusive model"]
year_keywords = ["year", "which year", "model year", "what year", "production year", "release year", "how old is it?", 
    "what year was it made", "when was it produced", "when was it released", "manufacturing year", 
    "when was it built", "how many years old is it", "is it a recent model", "is it an old model", 
    "is it from this year", "was it released this year", "is it the latest model", 
    "is it an older version", "is it a previous generation", "which year was it launched", 
    "does it belong to the new generation", "what‚Äôs the production date", "is it outdated", 
    "is it still a current model", "how long has it been out", "how long has it been on the market",
    "is it still being produced", "is it discontinued", "is it a classic model", 
    "is it vintage", "is it from last year", "was it released recently", 
    "is this an older release", "what‚Äôs the model‚Äôs age", "is it a first-generation model", 
    "when did this model first come out", "when was this version introduced", 
    "when was the first release", "which year‚Äôs edition is this", "is this an anniversary edition", 
    "is it the latest version or an old one", "is it still a good model for its year",
    "does it follow the latest trends", "how long will it stay relevant", 
    "was this the top model in its year", "is this an upgrade from last year‚Äôs model", 
    "what‚Äôs the exact release year", "what‚Äôs the official production year", 
    "does the model still receive updates", "is this year‚Äôs model better than the previous one", 
    "is it still worth buying this year", "has it been updated since its release", 
    "is it the newest version available", 
    "does it come with the latest features for its year", "how many generations old is it", 
    "is it a last-year model", "is it from this decade", 
    "is it still modern", "is it still competitive for its year", 
    "is this model still being manufactured", "is this a limited edition for a specific year", 
    "is there a newer version available", "was it popular in its release year", 
    "what year did they stop making it",
    "does it match the new technology standards"]
condition_keywords = ["condition", "is it new", "is it used", "used or new", "is it in good condition", "product condition?", 
    "status of this?", "what condition?", "is it like new?", "is it brand new?", "is it slightly used?", 
    "how worn is it?", "is it in perfect condition?", "does it have any scratches?", "does it have any dents?", 
    "any visible damage?", "any defects?", "any issues with it?", "is it in working condition?", 
    "is it still functional?", "does it work perfectly?", "does it need any repairs?", "is it damaged?", 
    "is it refurbished?", "is it factory refurbished?", "is it an open-box item?", "is it second-hand?", 
    "how much has it been used?", "has it been repaired before?", "is it in excellent shape?", 
    "is it well-maintained?", "does it look new?", "does it have any missing parts?", "is anything broken?", 
    "does it have original parts?", "does it come with original packaging?", "is it sealed?", 
    "is it pre-owned?", "does it show signs of wear?", "is there any wear and tear?", "does it need fixing?", 
    "is it fully operational?", "is everything intact?", "is there any fading?", "does it have all accessories?", 
    "are there any cracks?", "does it have original labels?", "any marks or stains?", "is it scratch-free?", 
    "does it work as expected?", "any functionality problems?", "does it overheat?", "does it have a warranty?", 
    "is it still under warranty?", "how old is it?", "has it been serviced?", "has it been tested?", 
    "any performance issues?", "does it run smoothly?", "any buttons not working?", "does it have any rust?", 
    "any color fading?", "is it waterproof?", "does it need maintenance?", "is it fragile?", 
    "has it been dropped?", "any loose parts?", "does it need replacement parts?", "any dead pixels?", 
    "is the battery still good?", "does the battery last long?", "does the screen have scratches?", 
    "does it charge properly?", "any dents on the body?", "any paint chipping?", "any structural damage?", 
    "is it in mint condition?", "is it in decent shape?", "does it look used?", "has it been cleaned?", 
    "does it come with a case?", "is it factory reset?", "does it have software issues?", 
    "any history of repairs?", "is it still strong?", "is it reliable?", "is there any weakness?", 
    "how sturdy is it?", "how fresh does it look?", "does it still look nice?", "is it worn out?", 
    "has it been in storage for a long time?", "has it been kept in good condition?", "does it have any upgrades?", 
    "is it partially damaged?", "can I see photos of its condition?", "has it been well taken care of?", 
    "any noticeable flaws?", "has it been exposed to water?", "does it have a clean history?", 
    "does it need tuning?", "how was it used before?", "how‚Äôs the exterior condition?", "is the material still good?",
    "does it need repainting?", "does it work without problems?", "how's the general wear?", 
    "is there any hidden damage?", "does it still look stylish?", "is there any internal damage?"]
visit_keywords = ["visit", "pass", "can I check", "can I see", "can I take a look", "pick up", 
    "I want to collect", "can I pass by", "can I come", "can I visit", 
    "can I check it out", "where can I see it", "can I take a look before buying", 
    "can I test it", "can I hold it in my hands", "where is it available", 
    "can I drop by", "can I come over", "where to collect", "is it possible to check in person", 
    "is it available for viewing", "can I take a closer look", "can I come and see", 
    "can I come to your place", "where can I come", "is there a showroom", 
    "where can I pick it up", "is pick-up possible", "can I come and collect", 
    "do you offer pick-up", "do you allow pick-up", "where can I pick it up from", 
    "where do I have to go", "where do I need to come", "what is the location for pick-up",
    "can I inspect it", "can I see it in real life", "where are you located", 
    "can I check the condition in person", "where is the meet-up point", 
    "is meet-up possible", "where can we meet", "can I schedule a visit", 
    "can I arrange a meeting", "is it possible to come over", "can we meet for inspection",
    "can I verify the product", "where can I check it", "do you allow personal inspection",
    "can I come now", "can I pass by today", "can I drop by tomorrow", 
    "is there a time for pick-up", "is self-pickup possible", "where do you usually meet buyers",
    "can I come to check before deciding", "do you have a physical location", 
    "can I see it before paying", "can I try it before purchase", "can I hold it to see how it feels",
    "do you have a store", "is there a pick-up location", "where is your place",
    "how far are you", "can we arrange a meet-up", "do you meet buyers", "is it okay if I come",
    "is pick-up free", "do I need an appointment for pick-up", "can I check it out today",
    "is viewing available", "do you have a time for me to visit", "can I touch and feel it",
    "do you allow meet-ups", "do you meet customers", "do I need to book a time", 
    "can I drop by anytime", "do I need to bring anything for pick-up", "where is the collection point"]
greetings = ["hi", "hello", "hey", "bonjour", "salam", "salut", 
    "good morning", "good evening", "good afternoon", 
    "hey there", "hi there", "hello there", "greetings", 
    "morning", "evening", "afternoon", 
    "how are you?", "how‚Äôs it going?", "hope you're well", 
    "hope you're doing good", "hope you're doing well", 
    "nice to meet you", "pleased to meet you", 
    "quick question", "i‚Äôm interested", "interested?", 
    "can I ask something?", 
    "is this still for sale?", "good day", "hey, got a minute?"]
price_keywords = ["price", "cost", "negotiable", "discount", "last price", "best price", "final price",
    "offer", "deal", "sale", "promo", "cheap", "expensive", "firm price",
    "lowest price", "asking price", "starting price", "market price",
    "fair price", "cash price"]
material_keywords = ["material", "made of", "fabric", "wood", "metal", "plastic", "leather", "glass",
    "ceramic", "stone", "marble", "aluminum", "steel", "iron", "brass", "copper",
    "silver", "gold", "rubber", "silicone", "resin", "bamboo", "wicker", "carbon",
    "composite", "velvet", "cotton", "linen", "wool", "polyester", "synthetic",
    "real leather", "faux leather"]
dimensions_keywords = [    "size", "dimensions", "measurements", "width", "height", "length",  
    "depth", "thickness", "diameter", "volume", "capacity", "weight",  
    "how big", "how tall", "how wide", "how long", "overall size"]

availability_keywords = [
    "still available", "is this available", "do you still have it", "is it in stock",
    "can I buy it now", "is it already sold", "is it reserved", "is it gone",
    "can I check if it's available", "has it been sold", "is it pending", 
    "is it out of stock", "is it on hold", "has someone already bought it",
    "can I pick it up today", "can I buy it now", "is it up for grabs"
]

shipping_keywords = [
    "do you deliver", "can you ship", "shipping cost", "delivery fee",
    "how much for shipping", "do you offer delivery", "does it include shipping",
    "can I get it delivered", "is postage included", "do you post",
    "can you send it", "what courier do you use", "what‚Äôs the shipping method",
    "is there free shipping", "how long for delivery", "when will I receive it",
    "can I pick it up myself", "do you use DHL", "can you mail it",
    "do you send via UPS", "can I get express delivery", "how much to send it to me",
    "where do you ship from", "do you offer international shipping",
    "does it come with tracking", "can I choose the shipping option"
]

accessories_keywords = [
    "does it come with", "what‚Äôs included", "any extra parts", "does it have accessories",
    "is the charger included", "does it come with a case", "does it include the box",
    "is the manual included", "does it come with cables", "are all parts included",
    "is it complete", "does it include software", "any free accessories", 
    "does it have original packaging", "is there a remote control", "does it come with a stand",
    "does it have additional batteries", "any bonus items", "are extra pieces included",
    "what do I get with it", "does it come with everything needed to use it"
]

location_keywords = [
    "where are you located", "where can I pick it up", "what‚Äôs the address",
    "where to meet", "is pickup possible", "where is the item", "meet-up location",
    "is it available in my area", "can I pick it up near me", "how far are you",
    "do you offer local pickup", "is there a collection point", "do you have a store",
    "can we meet halfway", "what city are you in", "what‚Äôs the nearest landmark"
]
# üìÑ Variations de r√©ponses enrichies
RESPONSE_VARIATIONS = {
    "model": [
        f"The model is {title} ({brand}). {description}",
        f"It‚Äôs a {title} ({brand}) with {description}",
        f"{title} ({brand}), {description}. Need more details?"
    ],
    "year": [
        f"It‚Äôs from {year_model}. It‚Äôs in {condition} condition",
        f"This model was bought in {year_model}, {condition}",
        f"{year_model} model, lightly used, in good shape"
    ],
    "condition": [
        f"This product is in {condition} condition",
        f"It‚Äôs {condition}, well-maintained",
        f"Used but works perfectly"
    ],
    "used_often": [
        "Rarely used, only a few times",
        "Not much usage, battery and performance are great",
        "Light usage, well taken care of"
    ],
    "last_price": [
        f"The price is {price}, but I‚Äôm open to offers",
        f"Price is {price}, feel free to make an offer",
        f"{price} is the listed price, willing to negotiate"
    ],
    "negotiation": [
        "Too low, can you go higher?",
        "That‚Äôs below my expectations, try a better offer",
        "Not enough for the condition, any better offer?"
    ],
    "deal_confirmed": [
        "Alright, {price} QAR deal confirmed. Let‚Äôs schedule a pick-up",
        "Good, {price} QAR works. Here are the available pick-up times",
        "{price} QAR is fine, when do you want to pick it up?"
    ],
    "material": [
        f"It‚Äôs made of {material}.",
        f"{title} is constructed from {material}, very durable",
        f"{material} is the main material used in this product"
    ],
    "dimensions": [
        f"The dimensions are {dimensions}",
        f"Size: {dimensions}",
        f"This product measures {dimensions}. Let me know if you need more details"
    ]
    "availability": [
        "Yes, it is still available! Let me know if you're interested.",
        "Yes, you can still buy it. Would you like more details?",
        "It's available! When would you like to pick it up?"
    ],
    "shipping": [
        "Yes, I can ship it. Where are you located?",
        "Shipping is available! Do you have a preferred courier?",
        "Yes, we offer delivery. The cost depends on your location."
    ],
    "accessories": [
        "It comes with all the necessary accessories.",
        "Yes, it includes the box and all original parts.",
        "It comes with {category}-specific accessories. Let me know if you need something extra."
    ],
    "location": [
        "I'm located in {location}. Let me know if you need directions!",
        "You can pick it up at {location}. Let me know when you're coming!",
        "Meet-up is possible in {location}. When would you like to come?"
    ]
}

# üìù Fonction principale de gestion des requ√™tes
def handle_user_query(user_input, user_phone):
    user_input = unidecode.unidecode(user_input.strip().lower())

    user_conversations.setdefault(user_phone, []).append(user_input)

    if any(word in user_input for word in model_keywords):
        return random.choice(RESPONSE_VARIATIONS["model"])
    
    if any(word in user_input for word in year_keywords):
        return random.choice(RESPONSE_VARIATIONS["year"])
    
    if any(word in user_input for word in condition_keywords):
        return random.choice(RESPONSE_VARIATIONS["condition"])
    
    if any(word in user_input for word in ["used often", "how much used", "do you use often"]):
        return random.choice(RESPONSE_VARIATIONS["used_often"])
    
    if any(word in user_input for word in price_keywords):
        return random.choice(RESPONSE_VARIATIONS["last_price"])
    
    if any(word in user_input for word in material_keywords):
        return random.choice(RESPONSE_VARIATIONS["material"])
    
    if any(word in user_input for word in dimensions_keywords):
        return random.choice(RESPONSE_VARIATIONS["dimensions"])

    if user_phone not in user_conversations:
        user_conversations[user_phone] = []
    user_conversations[user_phone].append(user_input)

    if any(word in user_input for word in availability_keywords):
        return random.choice(RESPONSE_VARIATIONS["availability"])
    
    if any(word in user_input for word in shipping_keywords):
        return random.choice(RESPONSE_VARIATIONS["shipping"])
    
    if any(word in user_input for word in accessories_keywords):
        return random.choice(RESPONSE_VARIATIONS["accessories"])
    
    if any(word in user_input for word in location_keywords):
        return random.choice(RESPONSE_VARIATIONS["location"]).format(location=location)
    
    price_offer = convert_price_format(user_input)
    if price_offer is not None:
        if price_offer < min_price:
            return random.choice(RESPONSE_VARIATIONS["negotiation"])
        else:
            confirmed_deals[user_phone] = price_offer
            return random.choice(RESPONSE_VARIATIONS["deal_confirmed"]).format(price=price_offer)

    return random.choice(["Not sure, can you clarify?", "Say again?", "I didn‚Äôt get that, try another way"])

# üõ†Ô∏è Convertir un prix sous format correct
def convert_price_format(price_str):
    price_str = price_str.lower().replace("qar", "").replace(",", "").strip()
    match = re.search(r'(\d+\.?\d*)k', price_str)
    if match:
        return int(float(match.group(1)) * 1000)
    match = re.search(r'\b\d+\b', price_str)
    if match:
        return int(match.group(0))
    return None

# üïí Proposer un RDV
def propose_appointment_slots(user_phone):
    slots_text = "\n".join([f"- {slot}" for slot in available_slots])
    message_body = (
        f"{slots_text}\n\nTo confirm, please contact me: {seller_contact}\nLocation: {location}"
    )
    return message_body

# üí° Transfert √† un humain apr√®s 3 √©checs
def transfer_to_human(user_phone):
    if user_conversations[user_phone].count("I didn‚Äôt get that") >= 3:
        try:
            twilio_client.messages.create(
                from_="whatsapp:+14155238886",
                to=f"whatsapp:{seller_contact}",
                body=f"A buyer is asking questions but I couldn‚Äôt assist. Here‚Äôs the chat history: {user_conversations[user_phone]}"
            )
            return random.choice(["I‚Äôll check and get back to you soon", "I‚Äôll come back to you soon", "Let me a moment to answer you"])
        except Exception as e:
            print(f"Error sending message via Twilio: {e}")
            return "I'm currently unable to connect you. Please try again later."

